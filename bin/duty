#!/usr/bin/env ruby

module Duty
  class CLI
    def initialize(args)
      @args = args
    end

    def exec
      if @args.any?
        if @args[0] == 'new-feature'
          if @args[1]
            write FeatureBranchSuccessMessage.new(@args[1]).to_s
          else
            write FeatureBranchExplainMessage.new.to_s
          end
        else
          write InvalidCommandMessage.new(@args).to_s
        end
      else
        write UsageMessage.new.to_s
      end
    end

    private

    class Message
      def initialize(string)
        @string = string
      end

      def to_s
        @string
      end
    end

    class FeatureBranchSuccessMessage < Message
      def initialize(name)
        @name = name
        super(message)
      end

      private

      def message
        <<-msg
          What just happend:
        
          #{bullet} Checked out `master` branch
          #{bullet} Created new feature branch `feature\/#{name}`
          #{bullet} Checked out new feature branch `feature\/#{name}`
          #{bullet} Pushed new feature branch `feature\/#{name}` to `origin`
        msg
      end

      def name
        @name
      end

      def bullet
        "\u2022".encode('utf-8')
      end
    end

    class InvalidCommandMessage < Message
      def initialize(args)
        @args = args
        super(message)
      end

      private

      def message
        <<-msg
          duty: `#{args}` is not a duty command
        msg
      end

      def args
        @args.join(' ')
      end
    end

    class FeatureBranchExplainMessage < Message
      def initialize
        super(message)
      end

      private

      def message
        <<-msg
          Creates a new feature branch

          usage: duty new-feature <name>
        msg
      end
    end

    class UsageMessage < Message
      def initialize
        super(message)
      end

      private

      def message
        <<-msg
          usage: duty <command> [<args>]

          Commands:

          new-feature\tCreates a new feature branch
        msg
      end
    end

    def write(msg)
      $stdout.puts remove_starting_whitespaces(msg) 
      exit 0
    end

    def remove_starting_whitespaces(msg)
      msg.gsub(/^ +/,'')
    end
  end
end

Duty::CLI.new(ARGV).exec
